server:
  port: 8000

spring:
  application:
    name: storefront_bff
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/CourseRealm}
        registration:
          keycloak:
            provider: keycloak
            client-id: storefront-bff
            client-secret: ${KEYCLOAK_CLIENT_SECRET_STOREFRONT:XljBWoGzc215LCKgNp7Ml5BgjQPJam3W}
            # redirect-uri: ${SELF_URL}/login/oauth2/code/storefront-bff
            scope: openid, profile, email, roles
  data:
    redis:
      host: localhost
      port: 6379
    session:
      store-type: redis

  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://identity:8080"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
      default-filters:
        - SaveSession
      routes:
        - id: user-service
          uri: ${USER_SERVICE_URI:http://localhost:9000}
          predicates:
            - Path=/storefront/**,/backoffice/**
          filters:
            - TokenRelay


service-uri:
  services:
    user-service: ${USER_SERVICE_URI:http://localhost:9000}
    token-identity: ${KEYCLOAK_TOKEN_URI:http://localhost:8080/realms/CourseRealm/protocol/openid-connect/token}
  token-id: storefront-bff
  token-secret: ${KEYCLOAK_CLIENT_SECRET_STOREFRONT:XljBWoGzc215LCKgNp7Ml5BgjQPJam3W}