server:
  port: 8000

spring:
  application:
    name: storefront_bff
  profiles:
    active: dev
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://identity:8080/realms/CourseRealm}
        registration:
          keycloak:   # registrationId
            provider: keycloak
            client-id: storefront-bff
            client-secret: ${KEYCLOAK_CLIENT_SECRET_STOREFRONT:okuONdlbOa8WuTAzeb23tVwPAObA4RUd}
            # redirect-uri: ${SELF_URL}/login/oauth2/code/storefront-bff
            scope: openid, profile, email, roles
  data:
    redis:
      host: localhost
      port: 6379
    session:
      store-type: redis

---

spring:
  config:
    active:
      on-profile: "dev"
  cloud:
    gateway:
#      default-filters:
#        - SaveSession
      routes:
        - id: user-service
          uri: ${USER_SERVICE_URI:http://localhost:9000}
          predicates:
            - Path=/storefront/**,/backoffice/**
          filters:
            - TokenRelay

        # http://localhost:8000/api/course-service/storefront/courses
        - id: course-service
          uri: ${COURSE_SERVICE_URI:http://localhost:9002}
          predicates:
            - Path=/api/course-service/**
          filters:
            - TokenRelay
            - StripPrefix=1  # StripPrefix=n removes the first n path segments before forwarding the request.

        - id: api
          uri: http://api.hajime.local
          predicates:
            - Path=/api/**
          filters:
            - TokenRelay
            - StripPrefix=1

        - id: storefront
          uri: ${STOREFRONT_REACTJS_URI:http://localhost:3000}
          predicates:
            - Path=/**
#          filters:
#            - RewritePath=/api/(?<segment>.*), /$\{segment}

---

spring:
  config:
    active:
      on-profile: "prod"

---

service-uri:
  services:
    user-service: ${USER_SERVICE_URI:http://localhost:9000}
    token-identity: ${KEYCLOAK_TOKEN_URI:http://identity:8080/realms/CourseRealm/protocol/openid-connect/token}
  token-id: storefront-bff
  token-secret: ${KEYCLOAK_CLIENT_SECRET_STOREFRONT:okuONdlbOa8WuTAzeb23tVwPAObA4RUd}

logging:
  level:
    org.springframework.security: DEBUG